(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{"./docs/1_home.mdx":function(e,n,t){"use strict";t.r(n),t.d(n,"exampleSrc",(function(){return i})),t.d(n,"default",(function(){return o}));var a=t("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),s=(t("react"),t("./node_modules/@mdx-js/react/dist/index.es.js")),i="/Algorithm/public/example.gif";"undefined"!==typeof i&&i&&i===Object(i)&&Object.isExtensible(i)&&Object.defineProperty(i,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"exampleSrc",filename:"docs/1_home.mdx"}});var r={exampleSrc:i},c="wrapper";function o(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(s.b)(c,Object.assign({},r,t,{components:n,mdxType:"MDXLayout"}),Object(s.b)("h2",{id:"why-axios-last"},"Why axios-last"),Object(s.b)("p",null,"Once you are seeking for a solution that only take the last value from multiple axios calls, ",Object(s.b)("inlineCode",{parentName:"p"},"Rx.js")," might be good choice."),Object(s.b)("p",null,"What if you don't like ",Object(s.b)("inlineCode",{parentName:"p"},"Rx.js"),"? I am right here!!!"),Object(s.b)("p",null,"Let's feel how it helps:"),Object(s.b)("img",{src:i,alt:"example",style:{width:"100%"}}),Object(s.b)("h2",{id:"installation"},"Installation"),Object(s.b)("h3",{id:"yarn"},"yarn"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"yarn add axios-last\n")),Object(s.b)("h3",{id:"npm"},"npm"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"npm install axios-last\n")),Object(s.b)("h2",{id:"usage"},"Usage"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),"import { create } from 'axios-last'\n\nconst request = create()\n\nfor (let i = 0; i < 3; i++) {\n  request({\n    method: 'GET',\n    url: 'https://test.com/users',\n    params: {\n      name: i\n    }\n  }).then(res => {\n    // only request with name === 2 received\n    // all previous requests were cancelled while subsequent request made\n  })\n}\n")),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"With AxiosInstance specified")),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),"import axios from 'axios'\nimport { create } from 'axios-last'\n\nconst instance = axios.create({\n  baseURL: 'https://test.api.com'\n})\n\n// you can specify axiosInstance for a reason\nconst request = create(instance)\n\nfor (let i = 0; i < 3; i++) {\n  request({\n    method: 'GET',\n    url: 'https://test.com/users',\n    params: {\n      name: i\n    }\n  }).then(res => {\n    // only request with name === 2 received\n    // all previous requests were cancelled while subsequent request made\n  })\n}\n")))}o&&o===Object(o)&&Object.isExtensible(o)&&Object.defineProperty(o,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"docs/1_home.mdx"}}),o.isMDXComponent=!0}}]);